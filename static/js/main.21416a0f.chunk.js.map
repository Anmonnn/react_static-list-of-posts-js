{"version":3,"sources":["components/UserInfo/UserInfo.jsx","components/CommentInfo/CommentInfo.jsx","components/CommentList/CommentList.jsx","components/PostInfo/PostInfo.jsx","components/PostList/PostList.jsx","App.jsx","index.jsx"],"names":["UserInfo","user","name","email","className","href","CommentInfo","comment","body","CommentList","id","PostInfo","post","title","username","PostList","posts","map","postsFromServer","userId","usersFromServer","find","postId","commentsFromServer","App","ReactDOM","render","document","getElementById"],"mappings":"6z8IAEaA,EAAW,SAAC,GAAD,QAAGC,KAAQC,EAAX,EAAWA,KAAMC,EAAjB,EAAiBA,MAAjB,OACtB,mBAAGC,UAAU,WAAWC,KAAMF,EAA9B,SACGD,KCJQI,EAAc,SAAC,GAAD,QAAGC,QAAWL,EAAd,EAAcA,KAAMC,EAApB,EAAoBA,MAAOK,EAA3B,EAA2BA,KAA3B,OACzB,sBAAKJ,UAAU,cAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,wBAAQA,UAAU,oBAAlB,SAAuCF,IAEtC,OAED,mBACEE,UAAU,qBACVC,KAAMF,EAFR,SAIGA,OAIL,qBAAKC,UAAU,oBAAf,SAAoCI,QCZ3BC,G,MAAc,SAAC,GAAD,QAAGF,eAAH,MAAa,GAAb,SACzB,qBAAKH,UAAU,cAAf,SACGG,IAAY,GAAK,KAAO,cAAC,EAAD,CAAaA,QAASA,GAAcA,EAAQG,QCD5DC,G,MAAW,SAAC,GAAD,QACtBC,KAAkBC,GADI,EACdC,SADc,EACJD,OAAOL,EADH,EACGA,KAAMP,EADT,EACSA,KAAMM,EADf,EACeA,QADf,OAGtB,sBAAKH,UAAU,WAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,oBAAIA,UAAU,kBAAd,SAAiCS,IAEjC,kDACiBZ,EAAKa,UACnB,IACD,cAAC,EAAD,CAAUb,KAAMA,GAAWA,EAAKS,UAIpC,mBAAGN,UAAU,iBAAb,SAA+BI,IAC7BD,EAAU,cAAC,EAAD,CAAaA,QAASA,IAAc,mBCjBvCQ,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACtB,qBAAKZ,UAAU,WAAf,SACGY,EAAMC,KAAI,SAAAL,GAAI,OACb,cAAC,EAAD,CAAUA,KAAMA,GAAWA,EAAKF,U,qBCUtC,IAAMM,EAAQE,EAAgBD,KAAI,SAAAL,GAAI,kCACjCA,GADiC,IAEpCX,MAVmBkB,EAUDP,EAAKO,OAThBC,EAAgBC,MAAK,SAAApB,GAAI,OAAIA,EAAKS,KAAOS,MAAW,MAU3DZ,SAPsBe,EAOEV,EAAKF,GANtBa,EAAmBF,MAAK,SAAAd,GAAO,OAAIA,EAAQe,SAAWA,MAAW,QAD1E,IAAwBA,EAJHH,KAcRK,EAAM,kBACjB,0BAASpB,UAAU,MAAnB,UACE,oBAAIA,UAAU,aAAd,kCAEA,cAAC,EAAD,CAAUY,MAAOA,QCrBrBS,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.21416a0f.chunk.js","sourcesContent":["import './UserInfo.scss';\n\nexport const UserInfo = ({ user: { name, email } }) => (\n  <a className=\"UserInfo\" href={email}>\n    {name}\n  </a>\n);\n","export const CommentInfo = ({ comment: { name, email, body } }) => (\n  <div className=\"CommentInfo\">\n    <div className=\"CommentInfo__title\">\n      <strong className=\"CommentInfo__name\">{name}</strong>\n\n      {' by '}\n\n      <a\n        className=\"CommentInfo__email\"\n        href={email}\n      >\n        {email}\n      </a>\n    </div>\n\n    <div className=\"CommentInfo__body\">{body}</div>\n  </div>\n);\n","import { CommentInfo } from '../CommentInfo';\nimport './CommentList.scss';\n\nexport const CommentList = ({ comment = [] }) => (\n  <div className=\"CommentList\">\n    {comment === [] ? null : <CommentInfo comment={comment} key={comment.id} />}\n  </div>\n);\n","import { UserInfo } from '../UserInfo';\nimport { CommentList } from '../CommentList';\nimport './PostInfo.scss';\n\nexport const PostInfo = ({\n  post: { username, title, body, user, comment },\n}) => (\n  <div className=\"PostInfo\">\n    <div className=\"PostInfo__header\">\n      <h3 className=\"PostInfo__title\">{title}</h3>\n\n      <p>\n        { `Posted by ${user.username}` }\n        {' '}\n        <UserInfo user={user} key={user.id} />\n      </p>\n    </div>\n\n    <p className=\"PostInfo__body\">{body}</p>\n    { comment ? <CommentList comment={comment} /> : 'No comments' }\n  </div>\n);\n","import { PostInfo } from '../PostInfo';\n\nexport const PostList = ({ posts }) => (\n  <div className=\"PostList\">\n    {posts.map(post => (\n      <PostInfo post={post} key={post.id} />\n    ))}\n  </div>\n);\n","import './App.scss';\nimport { PostList } from './components/PostList';\n\nimport postsFromServer from './api/posts.json';\nimport commentsFromServer from './api/comments.json';\nimport usersFromServer from './api/users.json';\n\nfunction getUserById(userId) {\n  return usersFromServer.find(user => user.id === userId) || null;\n}\n\nfunction getCommentById(postId) {\n  return commentsFromServer.find(comment => comment.postId === postId) || null;\n}\n\nconst posts = postsFromServer.map(post => ({\n  ...post,\n  user: getUserById(post.userId),\n  comment: getCommentById(post.id),\n}));\n\nexport const App = () => (\n  <section className=\"App\">\n    <h1 className=\"App__title\">Static list of posts</h1>\n\n    <PostList posts={posts} />\n  </section>\n);\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}